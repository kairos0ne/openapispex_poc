{
  "components": {
    "schemas": {
      "User": {
        "description": "A user of the app",
        "example": {
          "email": "joe@gmail.com",
          "id": 123,
          "inserted_at": "2017-09-12T12:34:55Z",
          "name": "Joe User",
          "updated_at": "2017-09-13T10:11:12Z"
        },
        "properties": {
          "birthday": {
            "description": "Birth date",
            "format": "date",
            "type": "string"
          },
          "email": {
            "description": "Email address",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "User ID",
            "type": "integer"
          },
          "inserted_at": {
            "description": "Creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "User name",
            "pattern": "[a-zA-Z][a-zA-Z0-9_]+",
            "type": "string"
          },
          "updated_at": {
            "description": "Update timestamp",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ],
        "title": "User",
        "type": "object",
        "x-struct": "Elixir.PhoenixAppWeb.Schemas.User"
      },
      "UserRequest": {
        "description": "POST body for creating a user",
        "example": {
          "user": {
            "email": "joe@gmail.com",
            "name": "Joe User"
          }
        },
        "properties": {
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        },
        "required": [
          "user"
        ],
        "title": "UserRequest",
        "type": "object",
        "x-struct": "Elixir.PhoenixAppWeb.Schemas.UserRequest"
      },
      "UserResponse": {
        "description": "Response schema for single user",
        "example": {
          "data": {
            "email": "joe@gmail.com",
            "id": 123,
            "inserted_at": "2017-09-12T12:34:55Z",
            "name": "Joe User",
            "updated_at": "2017-09-13T10:11:12Z"
          }
        },
        "properties": {
          "data": {
            "$ref": "#/components/schemas/User"
          }
        },
        "title": "UserResponse",
        "type": "object",
        "x-struct": "Elixir.PhoenixAppWeb.Schemas.UserResponse"
      },
      "UsersResponse": {
        "description": "Response schema for multiple users",
        "example": {
          "data": [
            {
              "email": "joe@gmail.com",
              "id": 123,
              "name": "Joe User"
            },
            {
              "email": "jay@yahoo.com",
              "id": 456,
              "name": "Jay Consumer"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "The users details",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array"
          }
        },
        "title": "UsersResponse",
        "type": "object",
        "x-struct": "Elixir.PhoenixAppWeb.Schemas.UsersResponse"
      }
    }
  },
  "info": {
    "title": "Phoenix App",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/users": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "List all useres",
        "operationId": "UserController.index",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            },
            "description": "User List Response"
          }
        },
        "summary": "List users",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{group_id}": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Create a user",
        "operationId": "UserController.create",
        "parameters": [
          {
            "description": "Group ID",
            "example": 1,
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "description": "The user attributes",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": "User"
          }
        },
        "summary": "Create user",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Show a user by ID",
        "operationId": "UserController.show",
        "parameters": [
          {
            "description": "User ID",
            "example": 123,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": "User"
          }
        },
        "summary": "Show user",
        "tags": [
          "users"
        ]
      }
    }
  },
  "security": [],
  "servers": [
    {
      "url": "http://localhost:4000",
      "variables": {}
    }
  ],
  "tags": []
}